# -*- coding: utf-8 -*-
"""Sikwna Brahma - Airbnb Data Analysis EDA Submission.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TgcNE1GetVW5spSdCWVScqTzfpqc-PqZ

# **Project Name**    -

##### **Project Type**    - EDA
##### **Contribution**    - Individual
##### **Team Member 1** - Sikwna Brahma

# **Project Summary -**

Project Objective:
The primary objective of this project is to conduct a comprehensive Exploratory Data Analysis (EDA) on a dataset containing information about Airbnb listings. This analysis aims to uncover valuable insights into various aspects of the Airbnb market, including pricing trends, location preferences, property types, and user reviews.

Data Source:
The dataset used for this analysis is sourced from AlmaBetter specially for Project purpose. It encompasses a diverse range of attributes, such as:
•	Listing Information: ID, name, description, host details, neighborhood, room type, price, minimum nights, availability.
•	Review Information: Number of Review, last review date, reviews per month.
Data Cleaning and Preparation:
Before proceeding with the EDA, the dataset underwent a rigorous cleaning and preparation process to ensure data quality and consistency:
•	Handling Missing Values: Missing values were identified and addressed through appropriate techniques like imputation or removal.
•	Data Type Conversion: Data types were converted to suitable formats (e.g., numeric, categorical) for analysis.

Exploratory Data Analysis:
The EDA was conducted using a combination of statistical techniques, data visualization:
•	Univariate Analysis:
 - Statistical Summary: Descriptive statistics were calculated to understand the distribution of numerical variables (e.g., mean, median, mode, standard deviation).
 - Data Visualization: Histograms, box plots, and frequency plots were used to visualize the distribution of numerical and categorical variables.
•	Bivariate Analysis:
  - Correlation Analysis: The relationship between numerical variables was explored using correlation matrices and scatter plots.
  - Contingency Tables and Cross-Tabulations: The association between categorical variables was analyzed using contingency tables and cross-tabulations.
  - Data Visualization: Bar charts, scatter plots, and line plots were used to visualize the relationship between two variables.

Key Insights and Findings:
The EDA revealed several key insights into the Airbnb market:

•	Pricing Trends:
- Identified factors influencing pricing, such as location, property type, amenities, and seasonality.
- Discovered pricing patterns and trends over time.

•	Location Preferences:
- Analyzed the popularity of different neighborhoods and cities.
- Identified factors driving demand in specific locations.

•	Property Type Analysis:
- Compared the performance of different property types (e.g., entire homes, private rooms, shared rooms).
- Analyzed the factors influencing occupancy rates and revenue for each property type.

•	User Review Analysis:
- Analyzed the number of reviews with the average price city wise.
- Airbnb demands from the review date.

# **GitHub Link -**

https://github.com/Sikwna/Sikwna-AlmaBetter-Projects

# **Problem Statement**

General Problem Statements:

1. How do factors like location, property type, amenities, and seasonality impact pricing on Airbnb?
2. What are the most popular neighborhoods or cities for Airbnb bookings?
3. How do user reviews and ratings influence booking preferences and host performance?
4. What are the trends in Airbnb usage over time, and how have they been affected by external factors like economic conditions or global events?

#### **Define Your Business Objective?**

•	Optimize Pricing Strategy: Identify optimal pricing strategies for different locations, property types, and seasons to maximize revenue.
•	Enhance User Experience: Understand user preferences and pain points to improve the platform's user experience and increase customer satisfaction.
•	Improve Search and Recommendation Algorithms: Develop more accurate and personalized search and recommendation algorithms to help users find the perfect accommodation.
•	Identify High-Potential Markets: Discover new markets with high demand and low competition to expand the business.
•	Optimize Host Performance: Provide insights to hosts on how to improve their listings, pricing, and communication to attract more guests and increase their income.

# **General Guidelines** : -

1.   Well-structured, formatted, and commented code is required.
2.   Exception Handling, Production Grade Code & Deployment Ready Code will be a plus. Those students will be awarded some additional credits.
     
     The additional credits will have advantages over other students during Star Student selection.
       
             [ Note: - Deployment Ready Code is defined as, the whole .ipynb notebook should be executable in one go
                       without a single error logged. ]

3.   Each and every logic should have proper comments.
4. You may add as many number of charts you want. Make Sure for each and every chart the following format should be answered.
        

```
# Chart visualization code
```
            

*   Why did you pick the specific chart?
*   What is/are the insight(s) found from the chart?
* Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

5. You have to create at least 20 logical & meaningful charts having important insights.


[ Hints : - Do the Vizualization in  a structured way while following "UBM" Rule.

U - Univariate Analysis,

B - Bivariate Analysis (Numerical - Categorical, Numerical - Numerical, Categorical - Categorical)

M - Multivariate Analysis
 ]

# ***Let's Begin !***

## ***1. Know Your Data***

### Import Libraries
"""

# Import Libraries
import pandas as pd
import numpy as np

"""### Dataset Loading"""

# Load Dataset

from google.colab import drive
drive.mount('/content/drive')

file_path ='/content/drive/MyDrive/Module 2 Airbnb Data Analysis/Airbnb NYC 2019.csv'
airbnb_df = pd.read_csv(file_path)

"""### Dataset First View"""

# Dataset First Look
airbnb_df.head()

"""### Dataset Rows & Columns count"""

# Dataset Rows & Columns count
airbnb_df.shape

len(airbnb_df)

"""### Dataset Information"""

# Dataset Info
airbnb_df.info()

"""#### Duplicate Values"""

airbnb_df.duplicated()

airbnb_df[airbnb_df.duplicated()]

airbnb_df.duplicated().sum() # counting duplicate values

# Dataset Duplicate Value Count
dupli_df = pd.DataFrame(airbnb_df)
duplicates = dupli_df.duplicated()

duplicates

dupli_count = dupli_df.duplicated().sum()
dupli_count

"""#### Missing Values/Null Values"""

# Missing Values/Null Values Count
airbnb_df.isnull()

count_missing = airbnb_df.isnull().sum()
count_missing # looking for all the null values in dataframe

import seaborn as sns
import matplotlib.pyplot as plt

# Visualizing the missing values
ax = count_missing.plot(kind='bar', figsize=(14, 6), color='skyblue')
for p in ax.patches:
    ax.annotate(f'{p.get_height():,}',  # Format number with commas and no decimal places
                (p.get_x() + p.get_width() / 2., p.get_height()),
                ha='center', va='center',
                xytext=(0, 8),
                textcoords='offset points', fontsize= 8)

plt.title('Missing Values by Column')
plt.xlabel('Column_Names')
plt.ylabel('Number of Missing Values')

# Rotate x-axis labels for better readability
plt.xticks(rotation=45)

plt.show()

"""### What did you know about your dataset?

1. I have load csv file called Airbnb NYC 2019.csv in the notebook.
2. There are 48895 rows and 16 columns in the dataset.
3. Column Names are id, name, host_id, host_name, neighbourhood_group, neighbourhood, latitude, longitude, room_type, price, minimum_nights, number_of_reviews, last_review, reviews_per_month, calculated_host_listings_count  and availability_365.
4. In coulmns there are also missing values (16 nos. in name, 21 nos. in host_name, 10052 nos. in number_of_reviews and 10052 nos. in last_review).

## ***2. Understanding Your Variables***
"""

# Dataset Columns
data_details = pd.DataFrame(airbnb_df)
column_df = data_details.dtypes
column_df

# Dataset Describe
airbnb_df.describe()

"""### Variables Description

1. 3 types of datatypes can be seen in the dataset. And they are integer (int64), float (float64) and object.
2. int64 is for the non-decimal numbers, float64 for decimal numbers and object can hold various datatypes, as of in data set object holds string and date values.

### Check Unique Values for each variable.
"""

# Check Unique Values for each variable.
type(airbnb_df)

unique_values = {}
for column in airbnb_df.columns:
    unique_values[column] = airbnb_df[column].unique()

print(unique_values)

"""## 3. ***Data Wrangling***"""

airbnb_df.head(5)

"""### Data Wrangling Code"""

airbnb_df.isnull().sum()

# Droping all the missing values
airbnb_df.dropna(inplace=True)

airbnb_df.isnull().sum()

# Replace NaN values with the current year
#default_year = pd.Timestamp.today()
#airbnb_df['last_review'] = airbnb_df['last_review'].fillna(default_year)
#airbnb_df.head(5)

#airbnb_df['reviews_per_month'] = airbnb_df['reviews_per_month'].fillna(0)   # adding zero to review_per_month coloumn
#airbnb_df.head(5)

#airbnb_df['name'] = airbnb_df['name'].fillna("unknown")
#airbnb_df.head(5)

#airbnb_df['host_name'] = airbnb_df['host_name'].fillna("unknown")
#airbnb_df.head(5)

airbnb_df.isnull().sum()  # re checking the null values

airbnb_df.head()

"""### What all manipulations have you done and insights you found?

1. While looking for the None values in the dataset I have found some datas are missing in between the dataset. For which I have fill the missing values with the string 'unknown' in the dataset.

## ***4. Data Vizualization, Storytelling & Experimenting with charts : Understand the relationships between variables***

#### Chart - 1

### Room Type Visualisation with the price
"""

# Chart - 1 visualization code
airbnb_df.head(2)

pd.value_counts(airbnb_df['room_type'])

pd.value_counts(airbnb_df['room_type']).plot(kind= 'pie' , autopct = '%1.0f%%')
plt.title('Percentage of total Airbnbs in Cities')
plt.show()

ax = sns.violinplot(x='room_type', y='price', data=airbnb_df)

# Add data labels for median price
# medians = airbnb_df.groupby('room_type')['price'].median()
#for i, median in enumerate(medians):
#    ax.text(i, median, f'Median: {median:.2f}', ha='center', va='bottom')

# Add data labels for quartiles and whiskers
#for box in ax.artists:
#    x, y, w, h = box.get_bbox().bounds
#    ax.text(x + w / 2, y + h / 2, f'Q1: {airbnb_df["price"][box.get_data()[0]].quantile(0.25):.2f}',
#           ha='center', va='center')
#    ax.text(x + w / 2, y + h / 4, f'Median: {airbnb_df["price"][box.get_data()[0]].median():.2f}',
#            ha='center', va='center')
#    ax.text(x + w / 2, y, f'Q3: {airbnb_df["price"][box.get_data()[0]].quantile(0.75):.2f}',
#            ha='center', va='center')
#    ax.text(x + w / 2, y - h / 4, f'Min: {airbnb_df["price"][box.get_data()[0]].min():.2f}',
#            ha='center', va='center')
#    ax.text(x + w / 2, y - h / 2, f'Max: {airbnb_df["price"][box.get_data()[0]].max():.2f}',
#            ha='center', va='center')
plt.title('Room Type Over Price')
plt.xlabel('Room Type')
plt.ylabel('Price')
plt.show()

"""1. We will find the mean, median price.
2. We try to find the Interquartile Range.
3. Identify Outliers.
4. Look for the price distributions.
"""

mean_prices = airbnb_df.groupby('room_type')['price'].mean()
print(mean_prices)

"""## Median Price for all the types of Room"""

median_prices = airbnb_df.groupby('room_type')['price'].median()
print(median_prices)

import statistics

mode_of_prices = airbnb_df.groupby('room_type')['price'].apply(lambda x: x.mode().tolist())

print(mode_of_prices)

"""## Interquartile Range finding"""

airbnb_df.describe()

q1 = airbnb_df.groupby('room_type')['price'].quantile(0.25)
q3 = airbnb_df.groupby('room_type')['price'].quantile(0.75)
iqr = q3 - q1
print(iqr)

"""## Identifying Outliers"""

lower_bound = q1 - 1.5 * iqr
upper_bound = q3 + 1.5 * iqr
print(lower_bound)
print(upper_bound)
# Align indices
#lower_bound, airbnb_df['price'] = lower_bound.align(airbnb_df['price'])
#upper_bound, airbnb_df['price'] = upper_bound.align(airbnb_df['price'])

# Identify outliers
#outliers = airbnb_df[(airbnb_df['price'] < lower_bound) | (airbnb_df['price'] > upper_bound)]
#print(outliers)

plt.figure(figsize=(10, 6))
plt.boxplot([airbnb_df['price'][airbnb_df['room_type'] == room_type] for room_type in airbnb_df['room_type'].unique()],
            labels=airbnb_df['room_type'].unique(),
            showmeans=True)
plt.title('Price Distribution by Room Type')
plt.ylabel('Price')
plt.xlabel('Room Type')

# Highlight outliers (optional)
for room_type in airbnb_df['room_type'].unique():
    data = airbnb_df['price'][airbnb_df['room_type'] == room_type]
    outliers = data[(data < lower_bound) | (data > upper_bound)]
    plt.scatter(x=[room_type] * len(outliers), y=outliers, color='red', marker='x', label='Outliers')

plt.legend()
plt.show()

"""## Histograms Chart and Price distribution"""

sns.histplot(airbnb_df, x='price', hue='room_type', kde=True)
plt.show()

skewness = airbnb_df.groupby('room_type')['price'].skew()
print(skewness)

# Adjust bin size and color palette
sns.histplot(airbnb_df, x="price", hue="room_type", bins=20, palette="Set2", alpha=0.7, kde=True)
plt.grid(True, which="both", linestyle="--", linewidth=0.5)

# Create separate plot for skewness
plt.figure(figsize=(8, 6))  # Set figure size
skewness = airbnb_df.groupby("room_type")["price"].skew()
ax=sns.barplot(x=skewness.index, y=skewness.values)
for p in ax.patches:
    ax.annotate(f"{p.get_height():.0f}", (p.get_x() + p.get_width() / 2, p.get_height()),
                ha='center', va='bottom')

plt.show()
print(skewness)

"""##### 1. Why did you pick the specific chart?

1. For the Price distribution over the room type we have use histogram chart to examine the shape of the chart.
2. As per the visualiztion we have right-skewed distribution which positive skewness. The tail is on the right.
3. The bar chart we have used is to display the distibution value over room type.
4. Box plot is used to identify the outliers

##### 2. What is/are the insight(s) found from the chart?

1. We could compare the median price over each room type.
2. With Interquartile range it can assess the spread of prices for each room tpye.
3. Identify room types with higher outliers.
4. Skewness visualiztion helps in understand the shape for each each room type.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

1. Yes with insights can help in positive business impact according to room type.

#### Chart - 2

### Airbnbs in different cities Visualization.
"""

airbnb_df.head(2)

airbnb_df=airbnb_df.rename(columns={'neighbourhood_group': 'city_name'})

# Chart - 2 visualization code
pd.value_counts(airbnb_df['city_name'])

plt.figure(figsize=(10, 8))
pd.value_counts(airbnb_df['city_name']).plot(kind= 'pie' , autopct = '%1.0f%%')
plt.title('Percentage of total Airbnbs in Cities')
plt.show()

"""##### 1. Why did you pick the specific chart?

1. A pie chart is effective for showing the relative proportions of different categories.
2. The chart allows for an easy comparison between cities in terms of their share of the total Airbnb listings.
3. Better representation for the less categories.

##### 2. What is/are the insight(s) found from the chart?

1. The most dominant city in terms of Airbnb presence, which could be useful for targeting marketing efforts, resource allocation, or further analysis of why this city is popular.
2. Cities with most concentrated Airbnbs and cities with emerging Airbnbs and potential market for further analysis.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

1. Yes insights will help in business growth after the further analysis with different category.

#### Chart - 3

## Top 10 Host by Mean Price
"""

# Chart - 3 visualization code
airbnb_df.head()

airbnb_df.groupby('host_id')['price'].mean().reset_index()

# Count unique host IDs
num_unique_hosts = airbnb_df['host_id'].nunique()

print("Number of unique host IDs:", num_unique_hosts)

# Filter for rows where price is 10000
filtered_df = airbnb_df[airbnb_df['price'] == 10000]

# Count unique host IDs
num_hosts_with_price_10000 = filtered_df['host_id'].nunique()

print("Number of hosts with price 10000:", num_hosts_with_price_10000)

avg_price_host = airbnb_df.groupby('host_id')['price'].mean().reset_index() # group by host_id as primary key and calculate the mean price

# Merge with the original DataFrame to get host names
avg_price_host = pd.merge(avg_price_host, airbnb_df[['host_id', 'host_name']], on='host_id')

top_owner = avg_price_host.sort_values(by = 'price', ascending = False)

top_10_owners = top_owner.head(10)
print(top_10_owners)

plt.figure(figsize=(10, 8))
#top_10_owners.plot(kind='bar', color='skyblue', edgecolor='black')
ax = sns.barplot(x='host_id', y='price', data=top_10_owners, order=top_10_owners.sort_values('price', ascending=False)['host_id'])
for p in ax.patches:
    ax.annotate(f'{p.get_height():,}',  # Format number with commas and no decimal places
                (p.get_x() + p.get_width() / 2., p.get_height()),
                ha='center', va='center',
                xytext=(0, 8),
                textcoords='offset points', fontsize= 8)
plt.xlabel('Host ID')
plt.ylabel('Mean Price')
plt.title('Top 10 Hosts by Mean Price')
plt.xticks(rotation=0)  # Rotate x-axis labels for better readability
plt.tight_layout()
plt.show()

"""##### 1. Why did you pick the specific chart?

1. For the better comparison between host/owners on their average pricing.

##### 2. What is/are the insight(s) found from the chart?

1. Highest and lowest Average Price of Host/Owners

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

1. No negative growth we can further do analysis on average price of cities along with the host/owner.

#### Chart - 4

## Further analysis on more categories.
"""

# Chart - 4 visualization code
airbnb_df.head(5)

city_avg_price = airbnb_df.groupby('city_name')['price'].mean().reset_index()

city_avg_price = city_avg_price.rename(columns={'price': 'avg_price'})

# city_avg_price = pd.merge(city_avg_price, airbnb_df[['name', 'city_name']], on='city_name')

city_avg_price.head()

print(city_avg_price.head(10))

plt.figure(figsize=(10, 8))
city_data = city_avg_price['city_name']
average_price = city_avg_price['avg_price']
plt.pie(average_price, labels= city_data, autopct='%1.1f%%')

# Set title and show the plot
plt.title('Average price for Airbnbs in different Cities')
plt.show()

"""##### 1. Why did you pick the specific chart?

1. Since we have lest number of cities pie chart is the best option to compare the dominant of average_price in different cities.
2. The average price was already calculated in the table. An dto understand the dominant of city over average price it compared in percentage for better visualtization.

##### 2. What is/are the insight(s) found from the chart?

1. From the above chart we could find the dominante cities. That is cities with higher average price can have higher demand on airbnb. And it can be due to many reason like tourism, business travel, health service etc.
2. The higher average price can have higher competition in the cities and vice-versa with the lower average price.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

1. We can see positive impact from the anlysis like pricing, factors for the demand and can expand the airbnb franchise in the cities.

#### Chart - 5

## Adding review counts for the cities
"""

airbnb_df.head(1)

# Chart - 5 visualization code
review_count = airbnb_df.groupby('city_name')['number_of_reviews'].sum()

review_count.head()

review_count = pd.merge(review_count, city_avg_price[['avg_price', 'city_name']], on='city_name')

review_count.head()

sns.scatterplot(data=review_count, x='avg_price', y='number_of_reviews', hue='city_name')

# Set title and labels
plt.title('Average Price vs. Review Count by City')
plt.xlabel('Average Price')
plt.ylabel('Review Count')

# Show the plot
plt.show()

"""##### 1. Why did you pick the specific chart?

1. Since we have two continuous variables here Average price and Number of Reviews for the Particular city it is best to represent the trends and potential correlation.
2. We groub the the plot with City Name which is colouring the data points.

##### 2. What is/are the insight(s) found from the chart?

1. Positive and negative correlation for both Average price and Number of reviews of the cities.
2. However in our case its almost correlated where Number of Reviews are higher for 2nd city with highest average price.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

1. The positive impact can be pricing strategy and potential market for airbnbs.

## Analysing city wise median price airbnbs.

#### Chart - 6
"""

# Chart - 6 visualization code
city_median_price = airbnb_df.groupby('city_name')['price'].median().reset_index(False)

city_median_price.head()

plt.figure(figsize=(10, 8))
ax1 = sns.barplot(x='city_name', y='price', data=city_median_price, order=city_median_price.sort_values('price', ascending=False)['city_name'])
for p in ax.patches:
    ax1.annotate(f'{p.get_height():,}',  # Format number with commas and no decimal places
                (p.get_x() + p.get_width() / 2., p.get_height()),
                ha='center', va='center',
                xytext=(0, 8),
                textcoords='offset points', fontsize= 8)
plt.xlabel('City Name')
plt.ylabel('Median Price')
plt.title('City-Wise Median Price')
plt.xticks(rotation=0)  # Rotate x-axis labels for better readability
plt.tight_layout()
plt.show()

"""### City-Wise mode on price"""

mode_city_prices = airbnb_df.groupby('city_name')['price'].apply(lambda x: x.mode().tolist())

print(mode_city_prices)

# Counting number of airbnbs citywise on different price
# Flatten the price list and create a new DataFrame
df_flattened = airbnb_df.explode('price')

# Filter for Bronx listings with price 60 and count
count = df_flattened[(df_flattened['city_name'] == 'Brooklyn') & (df_flattened['price'] == 10000)].shape[0]

print("Number of Airbnb listings:", count)

"""##### 1. Why did you pick the specific chart?

1. Pie Chart is choosed for comparison of values.
2. Clear representation.
3. Categorical data

##### 2. What is/are the insight(s) found from the chart?

1. We have found city-wise more expensive market with median.
2. With mode price in city-wise we can understand the multiple common price on different reasons like on property type and neighbour.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes this insights are for positive impact in business.
"""

airbnb_df.head()

"""#### Chart - 7

Pricing trends on Neighbourhood
"""

# Chart - 7 visualization code
neighbourhood_price = airbnb_df.groupby('neighbourhood')['price'].mean().reset_index()
print(neighbourhood_price)

# counting number of neighbouhoods
num_neighborhoods = airbnb_df['neighbourhood'].nunique()

print("Number of unique neighborhoods:", num_neighborhoods)

# Create a line chart
plt.figure(figsize=(21, 6))  # Adjust figure size if needed
plt.plot(neighbourhood_price['neighbourhood'], neighbourhood_price['price'])

# Set smaller font sizes
plt.xticks(fontsize=7, rotation=90)
plt.yticks(fontsize=8)
plt.title('Average Price by Neighborhood', fontsize=10)

plt.tight_layout()  # Adjust spacing between elements
plt.show()

"""##### 1. Why did you pick the specific chart?

1. For trending Prices on their neighbours line is used.

##### 2. What is/are the insight(s) found from the chart?

1. There can be te significantly higher price in some of the neighbours.
2. We could indentify the highest and lowest average price on neighbourhoods.
3. Indentify any group with similar average price.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

1. We can go for furhter analyis by identifying the outlier on the price trends over neighbour.

#### Chart - 8

## Identifying outlier on Average price againgst Neighbourhoods
"""

# Chart - 8 visualization code
q11 = neighbourhood_price.groupby('neighbourhood')['price'].quantile(0.25)
q33 = neighbourhood_price.groupby('neighbourhood')['price'].quantile(0.75)
iqr2 = q33 - q11
print(iqr2)

print(q11)

print(q33)

sns.histplot(neighbourhood_price, x='price', kde=True)
plt.show()

skewness_neighbour = neighbourhood_price.groupby('neighbourhood')['price'].skew()
print(skewness_neighbour)

"""##### 1. Why did you pick the specific chart?

1. The histogram plot indicates not much higher priced airbnbs as compared to lower price.

##### 2. What is/are the insight(s) found from the chart?

1. Most are affordable airbnb prices on neigbhouhoods.
2. Higher price airbnbs on neighbours can be premium areas.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

1. We can understand larger market for affordable prices on neighbours of airbnb which host can rely on.

# Identifying demand period from number of reviews, last review and reviews per month

#### Chart - 9
"""

# Chart - 9 visualization code
airbnb_df.head(5)

# converting relevant coloumns to appropriate data types
 airbnb_df['last_review'] = pd.to_datetime(airbnb_df['last_review'])

# Creating new coloumn review year
airbnb_df['review_year'] = airbnb_df['last_review'].dt.year

airbnb_df.head(2)

# Seasonal demand by grouping review year and month data
seasonal_demand = airbnb_df.groupby(['review_year', pd.to_datetime(airbnb_df['last_review']).dt.month])[['number_of_reviews', 'reviews_per_month']].sum()

print(seasonal_demand)

# review_year extracted from last_review
# last_review in the seasonal_demand is the month of last_review
# number_of_reviews is the year wise number of review
# reviews per month is total number of review year wise in particular month

# calculating the average demand for each month accross all years
seasonal_demand['average_demand'] = seasonal_demand.mean(axis=1)

sns.lineplot(x='last_review', y='average_demand', data=seasonal_demand.reset_index())
plt.title('Seasonal Demand Analysis')
plt.xlabel('Month')
plt.ylabel('Average Demand')

# identifying the months with highest average demands on reviews_per_month
peak_months = seasonal_demand.sort_values(by='average_demand', ascending=False).head(3)
print("Peak Months:")
print(peak_months)

"""##### 1. Why did you pick the specific chart?

1. Line chart is used for the trending month wise demand of the airbnb across the year.

##### 2. What is/are the insight(s) found from the chart?

1. The insights found is we can identify the seasonal demand in the monthly trending from the month wise review across the year.
2. Warmer season seems more demand for the airbnbs.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

1. Yes it is helpful in identifying the demand and arrange special accomodation and price for the more demand seasons.

#### Chart - 10

## Peak periods Year Over Year Comparison
"""

# Chart - 10 visualization code
# identifying the months with highest average demands on reviews_per_month
peak_months = seasonal_demand.sort_values(by='average_demand', ascending=False).head(3)
print("Peak Months:")
print(peak_months)

# Group the data by review year and calculate the total number of reviews:
yearly_demand = airbnb_df.groupby('review_year')['number_of_reviews'].sum()

print(yearly_demand)

sns.lineplot(x=yearly_demand.index, y=yearly_demand.values)
plt.title('Year-over-Year Demand Comparison')
plt.xlabel('Year')
plt.ylabel('Total Reviews')
plt.show()

"""##### 1. Why did you pick the specific chart?

1. For the year wise demand trending data line chart is the best to represent the data.

##### 2. What is/are the insight(s) found from the chart?

1. In the chart we can find the airbnb was not popular for almost 6 years.
2. It can be observed that little hike in demand and sharped hike in between 2018 to 2019.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

1. For the positive growth in the airbnb demand we can add additional special packages in the airbnbs for more demands.

#### Chart - 11

## Analyzing the Correlation Between number_of_reviews and reviews_per_month
"""

# Chart - 11 visualization code
correlation = airbnb_df['number_of_reviews'].corr(airbnb_df['reviews_per_month'])
print("Correlation coefficient:", correlation)

sns.scatterplot(x='number_of_reviews', y='reviews_per_month', hue= 'review_year', data=airbnb_df)
plt.title('Correlation Between Number of Reviews and Reviews per Month')
plt.xlabel('Number of Reviews')
plt.ylabel('Reviews per Month')
plt.show()

"""##### 1. Why did you pick the specific chart?

1. Scattered Plot is the best chart to represent the correlation between two variables with the categorical variable.
2. In the above chart itz Number of reviews in year with the Reviews per month in year.
3. Year is the actegorical variable.

##### 2. What is/are the insight(s) found from the chart?

1. The realtion is towards 1 from 0. So, we consider the positive (+) correaltion.
2. Higher number of reviews tends to higher average reviews per month.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

1. Positive correlation can have fresh new bookings from the previous reviews.
2. From the review host can be aware with the mixed response from the Guest and improved the facility.

#### Chart - 12

## Visualization of Average over minimum nights
"""

# Chart - 12 visualization code
airbnb_df.head()

# Group the data by `minimum_nights` and calculate the average price
average_prices_min_night = airbnb_df.groupby('minimum_nights')['price'].mean()

# Print the results
print(average_prices_min_night)

unique_minimum_nights = airbnb_df['minimum_nights'].nunique()

print("Number of unique minimum nights:", unique_minimum_nights)

df_nights = airbnb_df[airbnb_df['minimum_nights'] == 999]

average_price_nights = df_nights['price'].mean()

print("Average price for 999 minimum nights:", average_price_nights)

plt.plot(average_prices_min_night.index, average_prices_min_night.values)
plt.title('Average Price vs. Minimum Nights')
plt.xlabel('Minimum Nights')
plt.ylabel('Average Price')
plt.show()

"""##### 1. Why did you pick the specific chart?

1. Line chart is used to see the trends in the average over Minimum nights of the airbnb.

##### 2. What is/are the insight(s) found from the chart?

1. We could find the high prices over the minimum nights mostly around 100.
2. We could also see the minimum nights upto more than 1200 nights with the average price range.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

1. For the positive impact in business airbnb can plan for the price variation over minimum nights.

#### Chart - 13

## Visulation of average price over Availabity throughout the year
"""

# Chart - 13 visualization code
# Group the data by `minimum_nights` and calculate the average price
average_prices_availability = airbnb_df.groupby('availability_365')['price'].mean()

# Print the results
print(average_prices_availability)

plt.plot(average_prices_availability.index, average_prices_availability.values)
plt.title('Average Price vs. Availabity of Days over year')
plt.xlabel('Availability of Days in a year')
plt.ylabel('Average Price')
plt.show()

"""##### 1. Why did you pick the specific chart?

1. Line chart is used to find the trends of average on days available in airbnbs.

##### 2. What is/are the insight(s) found from the chart?

1. Not much difference in average price variation over availability of days in a year.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

1. Price trends are almost similar not much difference.

#### Chart - 14 - Correlation Heatmap

## Correlation Heatmap:

price, minimum_nights, number_of_reviews, reviews_per_month, calculated_host_listings_count, availability_365
"""

# Correlation Heatmap visualization code
corr = airbnb_df[['price', 'minimum_nights', 'number_of_reviews', 'reviews_per_month', 'calculated_host_listings_count', 'availability_365']].corr()
sns.heatmap(corr, annot=True, cmap='coolwarm')
plt.title('Correlation Heatmap')
plt.show()

"""##### 1. Why did you pick the specific chart?

1.Correlation heat map is used for the concise visual representation of the relationships between the above variables.

##### 2. What is/are the insight(s) found from the chart?

1. For the positive value relation we can understand that if one variable increases other also increases. Positively dependent or proportional.
2. For the negative value relation vise-versa to positive relation or non-proportional.
3. For the relation with value 0 we can understand no relations.

#### Chart - 15 - Pair Plot

## Pair Plot:
price, minimum_nights, number_of_reviews, reviews_per_month, calculated_host_listings_count, availability_365
"""

# Pair Plot visualization code
sns.pairplot(airbnb_df[['price', 'minimum_nights', 'number_of_reviews', 'reviews_per_month', 'calculated_host_listings_count', 'availability_365']])
plt.title('Pair Plot')
plt.show()

"""##### 1. Why did you pick the specific chart?

1. Distribution of each variables and relationship between pairs of variables.
2. Identify the relationship between each variables.

##### 2. What is/are the insight(s) found from the chart?

1. Relationship between price and other variables: How does price vary with the number of reviews, minimum nights, or availability? Are there any non-linear relationships?
2. Distribution of rental durations: What is the distribution of minimum nights? Are there any common rental lengths?
3. Relationship between reviews and other variables: How does the number of reviews correlate with price, availability, or the host's number of listings?
4. Distribution of host listings: How many listings do most hosts have? Are there any outliers with a large number of listings?
5. Relationship between availability and other variables: How does availability vary with price, minimum nights, or the number of reviews?

## **5. Solution to Business Objective**

#### What do you suggest the client to achieve Business Objective ?
Explain Briefly.

•	Compelling Description: Write a detailed and engaging description highlighting unique features and local attractions.
•	Competitive Pricing: Analyze market trends and set competitive prices to attract guests.
•	Online Reviews: Actively manage your online reputation by responding to reviews promptly and professionally.
•	Dynamic Pricing: Utilize dynamic pricing tools to adjust prices based on demand and seasonality.
•	Keep record of customer reviews for sentiment analysis for the service improvement.

# **Conclusion**

The EDA on the Airbnb dataset provided valuable insights into the factors driving demand, pricing trends, and user preferences. These insights can be leveraged by Airbnb hosts, property managers, and potential guests to make informed decisions.

### ***Hurrah! You have successfully completed your EDA Capstone Project !!!***
"""